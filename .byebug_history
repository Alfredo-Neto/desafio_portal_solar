c
@current_user
@current_user ||= User.find_by(auth_token: request.headers['Authorization'])
c
current_user
user_params
c
 current_user.attributes.select { |attr| attr.present?  }
 current_user.attributes.select { |attr| attr.nil?  }
 current_user.attributes.select { |attr| !attr.nil?  }
 current_user.attributes.filter(&:!nil)
 current_user.attributes
 current_user.properties
 current_user
 current_user.exclude_auth_token
 current_user.auth_token
 current_user.attributes
 current_user.except
 current_user
c
response.headers
response
response.headers
response.headers['Authorization']
user_signed_in?
c
jwt.secret = Rails.application.credentials.devise_jwt_secret_key!
c
current_user
c
jwt.token_header
jwt.expiration_time
request
jwt
jwt.expiration_time = 30.minutes.to_i
jwt
jwt.revocation_requests = [['DELETE', %r{^/logout$}]]
l
jwt.dispatch_requests = [['POST', %r{^/login$}]]
jwt.secret = Rails.application.credentials.devise_jwt_secret_key!
jwt
c
current_user
_opts
request.headers
request.headers['Authorization']
user_signed_in?
c
request.headers['Authorization']
request.headers
c
user_signed_in?
c
response
RESPONSE
response.headers['Authorization']
response.headers
user_signed_in?
c
user_signed_in?
c
user_signed_in?
c
user_signed_in?
current_user
request.headers
c
request.headers['Authorization']
c
request.headers['Authorization']
c
request.headers['Authorization']
c
user_signed_in?
c
user_signed_in?
c
UserSerializer.new(current_user).serializable_hash[:data][:attributes]
user_signed_in?
current_user
c
user_signed_in?
user_signed_in?(current_user)
user_signed_in(current_user)
current_user.user_signed_in?
current_user.errors.full_messages
current_user.errors
current_user
user
c
current_user.errors.full_messages
current_user.errors
current_user
c
user.save
c
user_params
c
params.require(:user)
params.require(:user
:user
params.permit(:email, :password, :password_confirmation)
params.require(:user).permit(:email, :password, :password_confirmation)
user_params
c
params
user_params
user
c
params["password"]
params["email"]
params["user"]
params["controller"]
params["api/v1/users"]
user_params
params
c
user
c
user = User.new user_params
user_params
user
c
user.save
user
c
User.all
c
resources :users
resources
scope
module
